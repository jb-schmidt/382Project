import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Scanner;

public class GameClient1 {
private GameClient1(){}
	
	public static void main(String[] args) {
		//String host = (args.length < 1) ? null : args[0];
		String host = "localhost";
		try{
			String [] [] matrix = new  String [3][3];
			int position = 1;
			for(int i = 0; i < 3; i++)
			{
				for(int j = 0; j < 3; j++)
				{
					matrix [i][j] = Integer.toString(position);
					position++;
				}
			}
			
			Registry registry = LocateRegistry.getRegistry(host, 12251);
			//String serverName = "Game";
			File file = new File("ClientStartup");
			BufferedReader br = new BufferedReader(new FileReader(file));
			String serverName = br.readLine();
			br.close();
			GameInterface stub = (GameInterface) registry.lookup(serverName);
			for(int i = 0; i < 3; i++)
			{
				System.out.println(matrix [i][0] + " | "  + matrix[i][1] + " | "  + matrix[i][2]);
				System.out.println("_________");
			}
			//boolean playersTurn = false;
			boolean playersTurn = true;
			Scanner input = new Scanner(System.in);
			String comments;
			while(playersTurn)
			{
				comments = input.nextLine();
				stub.makeComment(comments, serverName, host, true);
			}
		}
			
			//CHANGED FOR TESTING i SHOULD START AT 0 and go to 2
			
			/*
			for(int i = 0; i < 1; i++)
			{
				if(serverName.equals("Game"))
				{
					playersTurn = true;
				}
				//Runnable object = new threading(host, stub, serverName);
				Thread t = new Thread(new threading(host, stub, serverName, playersTurn, i));
				t.start();
			}
		}
		*/
		catch (Exception e){
			System.err.println("Client exception: " + e.toString());
			e.printStackTrace();
		}
	}
}
